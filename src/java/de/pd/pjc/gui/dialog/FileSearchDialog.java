/*
 * FileSearchDialog.java
 *
 * Created on February 16, 2007, 10:40 PM
 */

package de.pd.pjc.gui.dialog;

import java.awt.Color;
import java.awt.event.KeyEvent;

import javax.swing.JFrame;

import de.pd.pjc.FilePatternFilter;
import de.pd.pjc.gui.FileTablePanel;
import de.pd.pjc.gui.table.FileTableModel;
import de.pd.pjc.gui.table.TableSorter;
import de.pd.pjc.service.ServiceFactory;
import de.pd.pjc.util.IconFactory;

/**
 *
 * @author  petros
 */
public class FileSearchDialog extends JFrame {
   
	private FileTablePanel fileTablePanel ;
	
    /** Creates new form FileSearchDialog */
    public FileSearchDialog(String pLocation) {
        initComponents();
   
        getContentPane().setBackground(Color.white);
        settingsPannel.setBackground(new Color(167, 198, 255));
        resultPanel.setBackground(Color.white);
        
        
        setIconImage(IconFactory.getAppIconByName("kappfinder.png").getImage());
        findButton.setIcon(IconFactory.getAppIconByName("kappfinder.png"));
        
        tfLocation.setText(pLocation);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        settingsPannel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tfPattern = new javax.swing.JTextField();
        findButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        tfLocation = new javax.swing.JTextField();
        closeButton = new javax.swing.JButton();
        resultLabel = new javax.swing.JLabel();
        resultPanel = new javax.swing.JPanel();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("PJavaCommand Finder");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                formComponentHidden(evt);
            }
        });

        settingsPannel.setLayout(null);

        settingsPannel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 0, 11), new java.awt.Color(255, 255, 255)));
        settingsPannel.setMaximumSize(new java.awt.Dimension(600, 150));
        settingsPannel.setMinimumSize(new java.awt.Dimension(600, 150));
        settingsPannel.setPreferredSize(new java.awt.Dimension(600, 150));
        jLabel1.setDisplayedMnemonic('P');
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setLabelFor(tfPattern);
        jLabel1.setText("Pattern:");
        settingsPannel.add(jLabel1);
        jLabel1.setBounds(10, 30, 70, 15);

        tfPattern.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfPatternKeyPressed(evt);
            }
        });

        settingsPannel.add(tfPattern);
        tfPattern.setBounds(80, 30, 320, 20);

        findButton.setMnemonic('f');
        findButton.setText("Find");
        findButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findButtonActionPerformed(evt);
            }
        });

        settingsPannel.add(findButton);
        findButton.setBounds(10, 110, 61, 25);

        jLabel2.setDisplayedMnemonic('o');
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setLabelFor(tfLocation);
        jLabel2.setText("Location:");
        settingsPannel.add(jLabel2);
        jLabel2.setBounds(10, 60, 60, 15);

        settingsPannel.add(tfLocation);
        tfLocation.setBounds(80, 60, 320, 20);

        closeButton.setMnemonic('c');
        closeButton.setText("Close");
        closeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeButtonActionPerformed(evt);
            }
        });

        settingsPannel.add(closeButton);
        closeButton.setBounds(80, 110, 80, 25);

        settingsPannel.add(resultLabel);
        resultLabel.setBounds(10, 80, 230, 20);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(settingsPannel, gridBagConstraints);

        resultPanel.setLayout(new javax.swing.BoxLayout(resultPanel, javax.swing.BoxLayout.X_AXIS));

        resultPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Result"));
        resultPanel.setMaximumSize(new java.awt.Dimension(600, 300));
        resultPanel.setMinimumSize(new java.awt.Dimension(600, 300));
        resultPanel.setPreferredSize(new java.awt.Dimension(600, 300));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(resultPanel, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentHidden
// TODO add your handling code here:
    }//GEN-LAST:event_formComponentHidden

    private void closeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeButtonActionPerformed
   	 setVisible(false);
    }//GEN-LAST:event_closeButtonActionPerformed

    private void tfPatternKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPatternKeyPressed
   	 if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
   		 performFind();
   	 }
    }//GEN-LAST:event_tfPatternKeyPressed

    private void findButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findButtonActionPerformed
   	 performFind();
    }//GEN-LAST:event_findButtonActionPerformed

	private void performFind() {
		
		if(fileTablePanel != null)  {
			FileTableModel model = (FileTableModel) ((TableSorter) fileTablePanel.getTable().getModel()).getTableModel();
			model.clear();
		}

		Runnable searchThread = new FileSearchThread();
		Thread thread = new Thread(searchThread);
		thread.start();
		
	}
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton closeButton;
    private javax.swing.JButton findButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JPanel settingsPannel;
    private javax.swing.JTextField tfLocation;
    private javax.swing.JTextField tfPattern;
    // End of variables declaration//GEN-END:variables

    public class FileSearchThread implements Runnable {
   	 
   	 public FileSearchThread() {
   	 }
   	 
		public void run() {
			resultLabel.setText("Searching...");
			
			if(fileTablePanel == null)  {
		   	 fileTablePanel = new FileTablePanel(FileTablePanel.SEARCH_FILE_TABLE);
		   	 resultPanel.add(fileTablePanel);
		   	 resultPanel.updateUI();
	   	 }
			ServiceFactory.getMainWindowService().loadFileList(fileTablePanel.getTable(), tfLocation.getText(), new FilePatternFilter(tfPattern.getText(), true, false), true);
	   	 int rowCount = fileTablePanel.getTable().getRowCount();
	   	 fileTablePanel.getTable().requestFocusInWindow();
	   	 resultLabel.setText("Found " + rowCount + " items");
		}
    }
    
}
